name: GitHub Actions
on: [push]
env:
  APP_IMAGE: keboola/db-extractor-mssql
  KBC_DEVELOPERPORTAL_VENDOR: "keboola"
  KBC_DEVELOPERPORTAL_APP: "keboola.ex-db-mssql"
  KBC_DEVELOPERPORTAL_USERNAME: "keboola+github_actions_ex_db_mssql"
  KBC_DEVELOPERPORTAL_PASSWORD: ${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}
  DOCKERHUB_USER: "keboolabot"
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  KBC_TEST_PROJECT_URL: "https://connection.keboola.com/admin/projects/2703/dashboard"
  KBC_TEST_PROJECT_CONFIGS: "287615945 287628364"
  KBC_STORAGE_TOKEN: ${{ secrets.KBC_STORAGE_TOKEN }}
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      app_image_tag: ${{ steps.tag.outputs.app_image_tag }}
      is_semantic_tag: ${{ steps.tag.outputs.is_semantic_tag }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Print Docker version
        run: docker -v
      - name: Docker login
        if: env.DOCKERHUB_TOKEN
        run: docker login --username "$DOCKERHUB_USER" --password "$DOCKERHUB_TOKEN"
      - name: Build image
        run: docker build -t $APP_IMAGE .
      - name: Set image tag
        id: tag
        run: |
          TAG="${GITHUB_REF##*/}"
          IS_SEMANTIC_TAG=$(echo "$TAG" | grep -q '^v\?[0-9]\+\.[0-9]\+\.[0-9]\+$' && echo true || echo false)
          echo "Tag = '$TAG', is semantic tag = '$IS_SEMANTIC_TAG'"
          echo "is_semantic_tag=$IS_SEMANTIC_TAG" >> $GITHUB_OUTPUT
          echo "app_image_tag=$TAG" >> $GITHUB_OUTPUT
      - name: Push image to ECR
        uses: keboola/action-push-to-ecr@master
        with:
          vendor: ${{ env.KBC_DEVELOPERPORTAL_VENDOR }}
          app_id: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          username: ${{ env.KBC_DEVELOPERPORTAL_USERNAME }}
          password: ${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}
          tag: ${{ steps.tag.outputs.app_image_tag }}
          push_latest: ${{ steps.tag.outputs.is_semantic_tag }}
          source_image: ${{ env.APP_IMAGE}}

  tests:
    needs:
      - build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mssql: [ 2022, 2019, 2017, 2016, 2014, 2012 ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Pull image from ECR
        uses: keboola/action-pull-from-ecr@master
        with:
          vendor: ${{ env.KBC_DEVELOPERPORTAL_VENDOR }}
          app_id: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          username: ${{ env.KBC_DEVELOPERPORTAL_USERNAME }}
          password: ${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}
          tag: ${{ needs.build.outputs.app_image_tag }}
          target_image: ${{ env.APP_IMAGE}}
          tag_as_latest: true
      - name: Run tests
        run: |
          export MSSQL_VERSION="${{ matrix.mssql }}"
          docker compose run --rm app

  tests-in-kbc:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Run KBC test jobs
        if: env.KBC_STORAGE_TOKEN && env.KBC_TEST_PROJECT_CONFIGS
        uses: keboola/action-run-configs-parallel@master
        with:
          token: ${{ env.KBC_STORAGE_TOKEN }}
          componentId: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          tag: ${{ needs.build.outputs.app_image_tag }}
          configs: ${{ env.KBC_TEST_PROJECT_CONFIGS }}

  deploy:
    needs:
      - build
      - tests
      - tests-in-kbc
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && needs.build.outputs.is_semantic_tag == 'true'
    steps:
      - name: Set tag in the Developer Portal
        uses: keboola/action-set-tag-developer-portal@master
        with:
          vendor: ${{ env.KBC_DEVELOPERPORTAL_VENDOR }}
          app_id: ${{ env.KBC_DEVELOPERPORTAL_APP }}
          username: ${{ env.KBC_DEVELOPERPORTAL_USERNAME }}
          password: ${{ env.KBC_DEVELOPERPORTAL_PASSWORD }}
          tag: ${{ needs.build.outputs.app_image_tag }}
