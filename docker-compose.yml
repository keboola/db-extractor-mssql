services:
  app: &app
    build: .
    image: keboola/ex-db-mssql
    command: composer ci
    volumes:
      - ssh-keys:/root/.ssh
    environment:
      KBC_COMPONENT_RUN_MODE: run
      KBC_DATA_TYPE_SUPPORT: none
      MSSQL_DB_HOST: mssql
      MSSQL_DB_SSL_HOST: mssql-ssl
      MSSQL_DB_SSL_HOST_INVALID_CN: mssql-ssl-invalid-cn
      MSSQL_DB_PORT: 1433
      MSSQL_DB_USER: sa
      MSSQL_DB_PASSWORD: "yourStrong(!)Password"
      MSSQL_DB_DATABASE: test
    links:
      - sshproxy
      - mssql
      - mssql-ssl
      - mssql-ssl-invalid-cn
    depends_on:
      mssql:
        condition: service_healthy
      mssql-ssl:
        condition: service_healthy
      mssql-ssl-invalid-cn:
        condition: service_healthy

  dev:
    <<: *app
    volumes:
      - ssh-keys:/root/.ssh
      - ./data/:/data/
      - .:/code

  mssql: &mssql
    image: mssql-server-linux
    build:
      context: .
      dockerfile: docker/mssql/Dockerfile
      args:
        MSSQL_VERSION: ${MSSQL_VERSION}
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: "yourStrong(!)Password"
    healthcheck:
      test: [ "CMD", "sqlcmd", "-U", "sa", "-P", "yourStrong(!)Password", "-Q", "SELECT 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  mssql-ssl:
    <<: *mssql
    image: mssql-server-linux-ssl
    ports:
      - "1434:1433"
    build:
      context: .
      dockerfile: docker/mssql-ssl/Dockerfile
      args:
        MSSQL_VERSION: ${MSSQL_VERSION}

  mssql-ssl-invalid-cn:
    <<: *mssql
    image: mssql-server-linux-ssl-invalid-cn
    ports:
      - "1435:1433"
    build:
      context: .
      dockerfile: docker/mssql-ssl-invalid-cn/Dockerfile
      args:
        MSSQL_VERSION: ${MSSQL_VERSION}

  sshproxy:
    image: keboola/db-component-ssh-proxy:latest
    volumes:
      - ssh-keys:/root/.ssh
    links:
      - mssql

volumes:
  ssh-keys:
